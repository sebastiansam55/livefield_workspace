name: Build single file pyinstaller

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    permissions: write-all
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.10']

    steps:
    - name: Check out
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Update Windows Tags
      if: ${{ matrix.os == 'windows-latest'}}
      run: |
        git tag -f windows-latest
        git push origin -f windows-latest

    - name: Update Linux Tags
      if: ${{ matrix.os == 'ubuntu-latest'}}
      run: |
        git tag -f linux-latest
        git push origin -f linux-latest 

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller requests tabulate

    - name: Build executable
      run: |
        cd src
        pyinstaller --onefile main.py -n livefield

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: executable-${{ matrix.os }}
        path: |
          src/dist/livefield
          src/dist/livefield.exe

    - name: Create Windows Zip
      if: ${{ matrix.os == 'windows-latest'}}
      run: |
        mkdir -p tmp/.vscode
        cp README.md tmp/README.md
        cp src/dist/livefield.exe tmp/livefield.exe
        cp ex_config.json tmp/config.json
        cp jsconfig.json tmp/jsconfig.json
        cp .vscode/tasks.json tmp/.vscode/tasks.json
        python -c "import shutil; shutil.make_archive('dev_workspace', 'zip', 'tmp/')"

    - name: Create Linux Zip
      if: ${{ matrix.os == 'ubuntu-latest'}}
      run: |
        mkdir -p tmp/.vscode
        cp README.md tmp/README.md
        cp src/dist/livefield tmp/livefield
        cp ex_config.json tmp/config.json
        cp jsconfig.json tmp/jsconfig.json
        cp .vscode/tasks.json tmp/.vscode/tasks.json
        python -c "import shutil; shutil.make_archive('dev_workspace', 'zip', 'tmp/')"

    - name: Create Linux Release
      uses: "softprops/action-gh-release@v2"
      if: ${{ matrix.os == 'ubuntu-latest'}}
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        name: "Ubuntu Development Build"
        tag_name: "linux-latest"
        body: |
          # Setup instructions
          * Download and unpack dev_workspace.zip
          * Update the `square9api`,`username`,`password` and `dbid` values in `config.json`
          * In VS Code use the "open folder" option to open the unpack folder
          * Open the VS Code terminal (`Ctrl+Shift+~`)
          * Run `livefield[.exe] init` (add or remove .exe depending on platform)
            * This will download and create files for each of the Live Fields in the GlobalSearch database. 
            * If you have a live field that is using the GET type functionality you can edit this in the "config.json" file
          * Edit script/config.json values as needed.
          * To push your changes back to the server use "build" command in VS Code (`Ctrl+Shift+B`)
            * alternately you can run `livefield[.exe] sync
        files: |
          dev_workspace.zip
          README.md
          src/dist/livefield
          ex_config.json
          jsconfig.json

    - name: Create Windows Release
      uses: "softprops/action-gh-release@v2"
      if: ${{ matrix.os == 'windows-latest'}}
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        name: "Windows Development Build"
        tag_name: "windows-latest"
        make_latest: true
        body: |
          # Setup instructions
          * Download and unpack dev_workspace.zip
          * Update the `square9api`,`username`,`password` and `dbid` values in `config.json`
          * In VS Code use the "open folder" option to open the unpack folder
          * Open the VS Code terminal (`Ctrl+Shift+~`)
          * Run `livefield[.exe] init` (add or remove .exe depending on platform)
            * This will download and create files for each of the Live Fields in the GlobalSearch database. 
            * If you have a live field that is using the GET type functionality you can edit this in the "config.json" file
          * Edit script/config.json values as needed.
          * To push your changes back to the server use "build" command in VS Code (`Ctrl+Shift+B`)
            * alternately you can run `livefield[.exe] sync
        files: |
          dev_workspace.zip
          README.md
          src/dist/livefield.exe
          ex_config.json
          jsconfig.json
